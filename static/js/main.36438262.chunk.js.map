{"version":3,"sources":["components/PhoneBookList/PhoneBookList.module.css","components/PhoneBookLogo/PhoneBookLogo.module.css","Api/apiActions.js","redux/contactReducer/contactOperationsTypes.js","redux/contactReducer/contactOperations.js","redux/contactReducer/contactSlice.js","redux/filterReducer/filterSlice.js","redux/rootReducer.js","redux/store.js","components/Section/Section.js","redux/filterReducer/filterSelectors.js","redux/contactReducer/contactSelectors.js","components/PhoneBookFields/PhoneBookFields.js","helpers/helpers.js","components/PhoneBookFields/PhoneBookFieldsContainer.js","components/PhoneBookListItem/PhoneBookListItem.js","components/PhoneBookListItem/PhoneBookListItemContainer.js","components/PhoneBookList/PhoneBookList.js","components/PhoneBookList/PhoneBookListContainer.js","components/PhoneBookSearchField/PhoneBookSearchField.js","components/PhoneBookSearchField/PhoneBookSearchFieldContainer.js","components/PhoneBookLogo/PhoneBookLogo.js","components/PhoneBookContactLoader/PhoneBookContactLoader.js","components/PhoneBookContactLoader/PhoneBookContactLoaderContainer.js","App/App.js","App/AppContainer.js","index.js","Transitions/slideTransition.module.css","components/PhoneBookFields/PhoneBookFields.module.css","components/PhoneBookListItem/PhoneBookListItem.module.css","components/Section/Section.module.css","components/PhoneBookSearchField/PhoneBookSearchField.module.css","components/PhoneBookContactLoader/PhoneBookContactLoader.module.css"],"names":["module","exports","addNewContact","newContact","axios","post","then","data","deleteContact","id","delete","getAllContactsOpertation","createAsyncThunk","contactOperationsTypes","usersParams","thunkApi","a","get","contacts","catch","error","rejectWithValue","postNewContactOpertation","apiActions","deleteContactOpertation","contactSlice","createSlice","name","initialState","isLoading","extraReducers","pending","state","fulfilled","action","payload","rejected","loading","filter","item","filterSlice","reducers","changeQuery","rootReducer","combineReducers","reducer","store","configureStore","Section","title","isActive","children","CSSTransition","in","timeout","classNames","slideTransition","mountOnEnter","unmountOnExit","className","Styles","container","getFilterQuery","getContacts","getIsLoadingStatus","getFilteredContacts","createSelector","toLowerCase","includes","toast","configure","validationSchema","Yup","shape","max","min","required","number","matches","PhoneBookFields","onAddContact","phoneBookItems","initialValues","onSubmit","values","actions","some","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resetForm","props","touched","errors","handleChange","handleBlur","inputLabel","htmlFor","invalidMessage","inputFieldError","inputField","type","value","onChange","onBlur","placeholder","Btn","icon","checkCircle","color","width","height","connect","dispatch","obj","PhoneBookListItem","handleDelete","onDeleteContact","contact","this","listItem","onClick","xIcon","Component","PhoneBookList","onGetAllContact","TransitionGroup","component","map","transitionsStyle","key","PhoneBookSearchField","filterQuery","onChangeQuery","searchField","target","query","getFilterOnChange","PhoneBookLogo","setTimeout","setState","logo","PhoneBookContactLoader","Style","loader","App","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36438262.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookList_container__3dD8Q\",\"listItem\":\"PhoneBookList_listItem__a11Bj\",\"name\":\"PhoneBookList_name__2JI-s\",\"Btn\":\"PhoneBookList_Btn__37wG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"PhoneBookLogo_logo__1HOjq\"};","import axios from 'axios';\n\nexport const getContacts = () =>\n  axios.get('http://localhost:5000/contacts').then(({ data }) => data);\n\nexport const addNewContact = newContact =>\n  axios\n    .post('http://localhost:5000/contacts', newContact)\n    .then(({ data }) => data);\n\nexport const deleteContact = id =>\n  axios.delete(`http://localhost:5000/contacts/${id}`);\n","export default {\n  getAllContacts: 'contacts/getAllContacts',\n  postNewContact: 'contacts/postNewContact',\n  deleteContactOpertation: 'contacts/deleteContactOpertation',\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as apiActions from '../../Api/apiActions';\nimport contactOperationsTypes from './contactOperationsTypes';\n\nexport const getAllContactsOpertation = createAsyncThunk(\n  contactOperationsTypes.getAllContacts,\n  async (usersParams, thunkApi) =>\n    apiActions\n      .getContacts()\n      .then(contacts => contacts)\n      .catch(error => thunkApi.rejectWithValue(error)),\n);\n\nexport const postNewContactOpertation = createAsyncThunk(\n  contactOperationsTypes.postNewContact,\n  async (newContact, thunkApi) =>\n    apiActions\n      .addNewContact(newContact)\n      .then(data => data)\n      .catch(error => thunkApi.rejectWithValue(error)),\n);\n\nexport const deleteContactOpertation = createAsyncThunk(\n  contactOperationsTypes.deleteContactOpertation,\n  async (id, thunkApi) =>\n    apiActions\n      .deleteContact(id)\n      .then(() => id)\n      .catch(error => thunkApi.rejectWithValue(error)),\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  getAllContactsOpertation,\n  postNewContactOpertation,\n  deleteContactOpertation,\n} from './contactOperations';\n\nconst contactSlice = createSlice({\n  name: 'contacts',\n  initialState: { contacts: [], isLoading: false, error: null },\n  extraReducers: {\n    // Getting all contacts\n    [getAllContactsOpertation.pending]: state => ({\n      ...state,\n      isLoading: true,\n      error: null,\n    }),\n    [getAllContactsOpertation.fulfilled]: (state, action) => ({\n      ...state,\n      isLoading: false,\n      contacts: [...action.payload],\n    }),\n    [getAllContactsOpertation.rejected]: (state, action) => ({\n      ...state,\n      loading: false,\n      error: action.payload,\n    }),\n    // Post new contact\n    [postNewContactOpertation.pending]: state => ({\n      ...state,\n      isLoading: true,\n      error: null,\n    }),\n    [postNewContactOpertation.fulfilled]: (state, action) => ({\n      ...state,\n      isLoading: false,\n      contacts: [...state.contacts, action.payload],\n    }),\n    [postNewContactOpertation.rejected]: (state, action) => ({\n      ...state,\n      loading: false,\n      error: action.payload,\n    }),\n    // Delete contact\n    [deleteContactOpertation.pending]: state => ({\n      ...state,\n      isLoading: true,\n      error: null,\n    }),\n    [deleteContactOpertation.fulfilled]: (state, action) => ({\n      ...state,\n      isLoading: false,\n      contacts: state.contacts.filter(item => item.id !== action.payload),\n    }),\n    [deleteContactOpertation.rejected]: (state, action) => ({\n      ...state,\n      loading: false,\n      error: action.payload,\n    }),\n  },\n});\n\nexport default contactSlice;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    changeQuery: (state, action) => action.payload,\n  },\n});\n\nexport default filterSlice;\n","import { combineReducers } from 'redux';\nimport contactSlice from './contactReducer/contactSlice';\nimport filterSlice from './filterReducer/filterSlice';\n\nconst rootReducer = combineReducers({\n  contacts: contactSlice.reducer,\n  filter: filterSlice.reducer,\n});\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Styles from './Section.module.css';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\n\nconst Section = ({ title = '', isActive, children }) => {\n  return (\n    <CSSTransition\n      in={isActive}\n      timeout={500}\n      classNames={slideTransition}\n      mountOnEnter\n      unmountOnExit\n    >\n      <section className={Styles.container}>\n        <h1 className={Styles.title}>{title}</h1>\n        {children}\n      </section>\n    </CSSTransition>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import filterSlice from '../../redux/filterReducer/filterSlice';\n\nexport const getFilterQuery = state => state.filter;\n\nexport const getFilterOnChange = query =>\n  filterSlice.actions.changeQuery(query);\n","import { createSelector } from 'reselect';\nimport { getFilterQuery } from '../filterReducer/filterSelectors';\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getIsLoadingStatus = state => state.contacts.isLoading;\n\nexport const getFilteredContacts = createSelector(\n  getContacts,\n  getFilterQuery,\n  (contacts, filter) =>\n    contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Field, Form, Formik } from 'formik';\nimport { Icon } from '@iconify/react';\nimport { toast } from 'react-toastify';\nimport { CSSTransition } from 'react-transition-group';\nimport checkCircle from '@iconify/icons-cil/check-circle';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport Styles from './PhoneBookFields.module.css';\nimport { checkContactForUnique } from '../../helpers/helpers';\n\ntoast.configure();\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .max(20, 'Must be 20 characters or less')\n    .min(2, 'Must be 2 characters or more')\n    .required('Required'),\n  number: Yup.string()\n    .matches(\n      /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{2}(-|\\s)\\d{2}$/,\n      'Telephone number should be like: 000-00-00',\n    )\n    .required('Required'),\n});\n\nconst PhoneBookFields = ({ onAddContact, phoneBookItems }) => (\n  <>\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={(values, actions) => {\n        if (checkContactForUnique(phoneBookItems, values)) {\n          toast.error('This contact is alredy exist', {\n            position: 'top-right',\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n          return;\n        }\n        onAddContact({ ...values });\n        actions.resetForm();\n      }}\n      validationSchema={validationSchema}\n    >\n      {props => {\n        const { values, touched, errors, handleChange, handleBlur } = props;\n        return (\n          <Form className={Styles.container}>\n            <label className={Styles.inputLabel} htmlFor=\"name\">\n              Name\n            </label>\n\n            <CSSTransition\n              in={errors.name && touched.name}\n              classNames={slideTransition}\n              timeout={500}\n              mountOnEnter\n              unmountOnExit\n            >\n              <div className={Styles.invalidMessage}>{errors.name}</div>\n            </CSSTransition>\n\n            <Field\n              className={\n                errors.name && touched.name\n                  ? Styles.inputFieldError\n                  : Styles.inputField\n              }\n              type=\"text\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name=\"name\"\n              placeholder=\"Put contact name\"\n            />\n\n            <label className={Styles.inputLabel} htmlFor=\"number\">\n              Number\n            </label>\n\n            {\n              <CSSTransition\n                in={errors.number && touched.number}\n                classNames={slideTransition}\n                timeout={500}\n                mountOnEnter\n                unmountOnExit\n              >\n                <div className={Styles.invalidMessage}>{errors.number}</div>\n              </CSSTransition>\n            }\n\n            <Field\n              className={\n                errors.number && touched.number\n                  ? Styles.inputFieldError\n                  : Styles.inputField\n              }\n              value={values.number}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Number format 000-00-00\"\n            />\n            <button type=\"submit\" className={Styles.Btn}>\n              <Icon\n                icon={checkCircle}\n                color=\"blue\"\n                width=\"70px\"\n                height=\"50px\"\n              />\n            </button>\n          </Form>\n        );\n      }}\n    </Formik>\n  </>\n);\n\nPhoneBookFields.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  phoneBookItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nexport default PhoneBookFields;\n","export const checkContactForUnique = (contactsArr, newContact) =>\n  contactsArr.some(\n    item => item.name.toLowerCase() === newContact.name.toLowerCase(),\n  );\n","import { connect } from 'react-redux';\nimport { getContacts } from '../../redux/contactReducer/contactSelectors';\nimport { postNewContactOpertation } from '../../redux/contactReducer/contactOperations';\nimport PhoneBookFields from './PhoneBookFields';\n\nconst mapStateToProps = state => ({\n  phoneBookItems: getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: obj => dispatch(postNewContactOpertation(obj)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBookFields);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport xIcon from '@iconify/icons-cil/x';\nimport Styles from './PhoneBookListItem.module.css';\n\nexport default class PhoneBookListItem extends Component {\n  static propTypes = {\n    onDeleteContact: PropTypes.func.isRequired,\n    contact: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  handleDelete = () => {\n    const { onDeleteContact, contact } = this.props;\n    onDeleteContact(contact.id);\n  };\n\n  render() {\n    const { name, number } = this.props.contact;\n    return (\n      <li className={Styles.listItem}>\n        <span className={Styles.name}>\n          {name} : {number}\n        </span>\n        <button\n          onClick={this.handleDelete}\n          className={Styles.Btn}\n          type=\"button\"\n        >\n          <Icon icon={xIcon} color=\"red\" width=\"40px\" height=\"40px\" />\n        </button>\n      </li>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport PhoneBookListItem from './PhoneBookListItem';\nimport { deleteContactOpertation } from '../../redux/contactReducer/contactOperations';\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContactOpertation(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(PhoneBookListItem);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PhoneBookListItem from '../PhoneBookListItem/PhoneBookListItemContainer';\nimport Styles from './PhoneBookList.module.css';\nimport transitionsStyle from '../../Transitions/slideTransition.module.css';\n\nexport default class PhoneBookList extends Component {\n  static propTypes = {\n    phoneBookItems: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string,\n      }),\n    ).isRequired,\n    onGetAllContact: PropTypes.func,\n  };\n  componentDidMount() {\n    const { onGetAllContact } = this.props;\n    onGetAllContact();\n  }\n  render() {\n    const { phoneBookItems } = this.props;\n    return (\n      <TransitionGroup component=\"ul\" className={Styles.container}>\n        {phoneBookItems.map(contact => (\n          <CSSTransition\n            in\n            timeout={500}\n            classNames={transitionsStyle}\n            key={contact.id}\n            unmountOnExit\n          >\n            <PhoneBookListItem contact={contact} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport PhoneBookList from './PhoneBookList';\nimport { getFilteredContacts } from '../../redux/contactReducer/contactSelectors';\n\nimport { getAllContactsOpertation } from '../../redux/contactReducer/contactOperations';\n\nconst mapStateToProps = state => ({\n  phoneBookItems: getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onGetAllContact: () => dispatch(getAllContactsOpertation()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBookList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport Styles from './PhoneBookSearchField.module.css';\n\nconst PhoneBookSearchField = ({ filterQuery, onChangeQuery, isActive }) => (\n  <CSSTransition\n    in={isActive}\n    mountOnEnter\n    unmountOnExit\n    timeout={500}\n    classNames={slideTransition}\n  >\n    <div className={Styles.container}>\n      <input\n        className={Styles.searchField}\n        type=\"text\"\n        name=\"filterQuery\"\n        value={filterQuery}\n        onChange={({ target }) => onChangeQuery(target.value)}\n        placeholder=\"Search contact...\"\n      />\n    </div>\n  </CSSTransition>\n);\n\nPhoneBookSearchField.propTypes = {\n  filterQuery: PropTypes.string.isRequired,\n  onChangeQuery: PropTypes.func.isRequired,\n  isActive: PropTypes.bool,\n};\n\nexport default PhoneBookSearchField;\n","import { connect } from 'react-redux';\nimport PhoneBookSearchField from './PhoneBookSearchField';\nimport {\n  getFilterQuery,\n  getFilterOnChange,\n} from '../../redux/filterReducer/filterSelectors';\n\nconst mapStateToProps = state => ({\n  filterQuery: getFilterQuery(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeQuery: query => dispatch(getFilterOnChange(query)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PhoneBookSearchField);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport Styles from './PhoneBookLogo.module.css';\n\nexport default class PhoneBookLogo extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n  };\n  state = {\n    isActive: false,\n  };\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ isActive: true }), 300);\n  }\n  render() {\n    const { isActive } = this.state;\n    const { title } = this.props;\n    return (\n      <CSSTransition in={isActive} classNames={slideTransition} timeout={500}>\n        <div className={Styles.logo}>{title}</div>\n      </CSSTransition>\n    );\n  }\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport Style from './PhoneBookContactLoader.module.css';\n\nconst PhoneBookContactLoader = ({ isLoading }) => {\n  return isLoading ? (\n    <div className={Style.container}>\n      <Loader\n        className={Style.loader}\n        type=\"Grid\"\n        color=\"#3645ab\"\n        height={80}\n        width={80}\n      />\n    </div>\n  ) : null;\n};\n\nPhoneBookContactLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default PhoneBookContactLoader;\n","import { connect } from 'react-redux';\nimport { getIsLoadingStatus } from '../../redux/contactReducer/contactSelectors';\nimport PhoneBookContactLoader from './PhoneBookContactLoader';\n\nconst mapStateToProps = state => ({\n  isLoading: getIsLoadingStatus(state),\n});\n\nexport default connect(mapStateToProps)(PhoneBookContactLoader);\n","import React from 'react';\nimport Section from '../components/Section/Section';\nimport PhoneBookFields from '../components/PhoneBookFields/PhoneBookFieldsContainer';\nimport PhoneBookList from '../components/PhoneBookList/PhoneBookListContainer';\nimport PhoneBookSearchField from '../components/PhoneBookSearchField/PhoneBookSearchFieldContainer';\nimport PhoneBookLogo from '../components/PhoneBookLogo/PhoneBookLogo';\nimport PhoneBookContactLoader from '../components/PhoneBookContactLoader/PhoneBookContactLoaderContainer';\n\nconst App = ({ phoneBookItems }) => (\n  <main>\n    <PhoneBookLogo title=\"PhoneBook\" />\n    <Section isActive>\n      <PhoneBookFields />\n    </Section>\n    <Section title={'Contacts'} isActive={true}>\n      <PhoneBookContactLoader />\n      <PhoneBookSearchField isActive={phoneBookItems.length > 1} />\n      <PhoneBookList />\n    </Section>\n  </main>\n);\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { getContacts } from '../redux/contactReducer/contactSelectors';\n\nconst mapStateToProps = state => ({\n  phoneBookItems: getContacts(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from './App/AppContainer';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTransition_enter__Jev6O\",\"enterActive\":\"slideTransition_enterActive__2Ab6g\",\"exit\":\"slideTransition_exit___6OWx\",\"exitActive\":\"slideTransition_exitActive__2UlxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookFields_container__1neia\",\"inputLabel\":\"PhoneBookFields_inputLabel__3RQwq\",\"inputField\":\"PhoneBookFields_inputField__134lX\",\"inputFieldError\":\"PhoneBookFields_inputFieldError__tOlKY PhoneBookFields_inputField__134lX\",\"invalidMessage\":\"PhoneBookFields_invalidMessage__2O7lX\",\"Btn\":\"PhoneBookFields_Btn__QFhBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"PhoneBookListItem_listItem__troxE\",\"name\":\"PhoneBookListItem_name__2fv6o\",\"Btn\":\"PhoneBookListItem_Btn__lPy3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2r7IE\",\"title\":\"Section_title__8lKlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookSearchField_container__d3pxw\",\"searchField\":\"PhoneBookSearchField_searchField__39XDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookContactLoader_container__34vR-\",\"loader\":\"PhoneBookContactLoader_loader__2t0PD\"};"],"sourceRoot":""}